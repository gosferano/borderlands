---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { Image } from 'astro:assets';
import { getCollection, render } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const builds = await getCollection('builds');
  return builds.map((build) => ({
    params: { slug: build.id },
    props: build,
  }));
}

const build = Astro.props as CollectionEntry<'builds'>;
const { Content } = await render(build);
---

<BaseLayout title={build.data.title}>
  <article
    class="mx-auto max-w-4xl overflow-hidden rounded-2xl bg-white shadow-lg transition-colors duration-300 dark:bg-gray-800"
  >
    <!-- Hero Image -->
    {
      build.data.heroImage && (
        <Image
          width={720}
          height={360}
          src={build.data.heroImage}
          alt={build.data.title}
          class="w-full object-cover"
        />
      )
    }

    <div class="space-y-6 p-6">
      <!-- Title and Excerpt -->
      <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">{build.data.title}</h1>
      <p class="text-lg text-gray-800 dark:text-gray-100">{build.data.excerpt}</p>

      <!-- Grid for properties -->
      <div class="grid grid-cols-12 gap-4">
        <!-- Character -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Character</span>
          <span class="text-gray-800 dark:text-gray-100">{build.data.character}</span>
        </div>

        <!-- Action Skill -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Action Skill</span>
          <span class="text-gray-800 dark:text-gray-100">{build.data.actionSkill}</span>
        </div>

        <!-- Video Link -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Video</span>
          <a
            href={build.data.videoLink}
            target="_blank"
            class="text-blue-600 hover:underline dark:text-blue-400">{build.data.videoLink}</a
          >
        </div>

        <!-- Build Link -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Build</span>
          <a
            href={build.data.buildLink}
            target="_blank"
            class="text-blue-600 hover:underline dark:text-blue-400">{build.data.buildLink}</a
          >
        </div>

        <!-- Published -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Published</span>
          <span class="text-gray-800 dark:text-gray-100"
            >{new Date(build.data.pubDate).toLocaleDateString()}</span
          >
        </div>

        <!-- Updated -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Updated</span>
          <span class="text-gray-800 dark:text-gray-100"
            >{new Date(build.data.updatedDate).toLocaleDateString()}</span
          >
        </div>

        <!-- Creator -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Creator</span>
          <span class="text-gray-800 dark:text-gray-100">{build.data.creator}</span>
        </div>

        <!-- Reviewer -->
        <div class="col-span-6 flex flex-col md:col-span-3">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Reviewer</span>
          <span class="text-gray-800 dark:text-gray-100">{build.data.reviewer}</span>
        </div>

        <!-- Skill Points -->
        <!-- <div class="col-span-12 mt-2 flex gap-6 md:col-span-12">
          <div class="flex flex-col items-center">
            <span class="mb-1 text-sm font-semibold text-red-500">Red</span>
            <span class="font-mono text-lg">{build.data.redTree}</span>
          </div>
          <div class="flex flex-col items-center">
            <span class="mb-1 text-sm font-semibold text-green-500">Green</span>
            <span class="font-mono text-lg">{build.data.greenTree}</span>
          </div>
          <div class="flex flex-col items-center">
            <span class="mb-1 text-sm font-semibold text-blue-500">Blue</span>
            <span class="font-mono text-lg">{build.data.blueTree}</span>
          </div>
        </div> -->

        <!-- Ratings: Mobbing, Bossing, UVH -->

        <div class="col-span-12 flex items-center gap-1 md:col-span-4">
          <span class="font-semibold">Mobbing:</span>
          {
            Array.from({ length: 4 }, (_, i) => (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill={i < build.data.mobbingRating ? 'gold' : 'none'}
                stroke="gold"
                stroke-width="2"
                class="h-4 w-4"
              >
                <path d="M12 2.5l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14l-5-4.87 6.91-1.01L12 2.5z" />
              </svg>
            ))
          }
        </div>

        <div class="col-span-12 flex items-center gap-1 md:col-span-4">
          <span class="font-semibold">Bossing:</span>
          {
            Array.from({ length: 4 }, (_, i) => (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill={i < build.data.bossingRating ? 'gold' : 'none'}
                stroke="gold"
                stroke-width="2"
                class="h-4 w-4"
              >
                <path d="M12 2.5l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14l-5-4.87 6.91-1.01L12 2.5z" />
              </svg>
            ))
          }
        </div>

        <div class="col-span-12 flex items-center gap-1 md:col-span-4">
          <span class="font-semibold">UVH Viability:</span>
          <div class="flex gap-1">
            {
              Array.from({ length: 5 }, (_, i) => (
                <div
                  class={`h-4 w-4 rounded-full ${i < build.data.uvhFallof ? 'bg-green-500' : 'bg-gray-400 dark:bg-gray-600'}`}
                />
              ))
            }
          </div>
        </div>

        <!-- Required DLCs -->
        <div class="col-span-12 md:col-span-6 flex w-full min-w-0 flex-col">
          <span class="font-semibold text-gray-700 dark:text-gray-300">Required DLCs:</span>
          <span class="text-gray-800 dark:text-gray-100">
            {build.data.requiredDLCs?.length ? build.data.requiredDLCs.join(', ') : 'none'}
          </span>
        </div>
      </div>

      <!-- Notes / Content -->
      <div class="prose prose-invert max-w-none border-t border-gray-300 p-6 dark:border-gray-700">
        <Content />
      </div>

      <!-- Tags at bottom -->
      <div class="mt-4 flex flex-wrap gap-2">
        {
          build.data.tags?.map((tag) => (
            <a
              href={`/borderlands/builds/tagged/${encodeURIComponent(tag.toLowerCase())}/`}
              class="rounded-full bg-gray-200 px-2 py-0.5 text-sm text-gray-800 transition hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600"
            >
              {tag}
            </a>
          ))
        }
      </div>
    </div>
  </article>
</BaseLayout>
