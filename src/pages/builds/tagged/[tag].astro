---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import BuildCard from '../../../components/BuildCard.astro';

export async function getStaticPaths() {
  const builds = await getCollection('builds');

  // Collect all unique tags
  const allTags = Array.from(
    new Set(builds.flatMap((b) => (b.data.tags || []).map((t) => t.trim().toLowerCase())))
  );

  console.log('All tags for static paths:', allTags); // Debug: terminal log

  return allTags.map((tag) => ({
    params: { tag },
  }));
}

// Current tag from the route
const tag = Astro.params.tag;

// Fetch all builds
const builds = await getCollection('builds');

// Filter builds by tag
const taggedBuilds = builds.filter(
  (b) =>
    Array.isArray(b.data.tags) &&
    b.data.tags.map((t) => t.trim().toLowerCase()).includes(tag.toLowerCase())
);
---

<BaseLayout title={`Tag: ${tag}`}>
  <section class="mx-auto max-w-5xl px-6 py-10 text-center">
    <h1 class="mb-6 text-4xl font-bold">Builds tagged: {tag}</h1>

    {
      taggedBuilds.length > 0 ? (
        <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
          {taggedBuilds.map((build) => (
            <BuildCard build={build} />
          ))}
        </div>
      ) : (
        <p>No builds found for this tag.</p>
      )
    }
  </section>
</BaseLayout>
